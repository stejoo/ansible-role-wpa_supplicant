---

- name: Ensure required package(s)
  become: yes
  package:
    name:
      - wpasupplicant
      - python-pip
    state: present

- name: Ensure required Python dependency # for the expect module
  pip:
    name: pexpect
    state: present
    extra_args: --user

- name: Generate encrypted passphrase(s)
  expect:
    command: wpa_passphrase {{ item.ssid }}
    responses:
      "# reading passphrase": "{{ item.psk }}"
  when: item.psk is defined and wpa_passphrase
  loop: "{{ wpa_networks }}"
  register: wpa_encrypted_networks
  changed_when: false
  check_mode: no
  no_log: true

- name: Generate wpa_supplicant.conf file
  become: yes
  template:
    src: templates/etc/wpa_supplicant/wpa_supplicant.conf.j2
    dest: /etc/wpa_supplicant/wpa_supplicant.conf
    owner: root
    group: root
    mode: 0600
  no_log: true
  notify:
    - Reconfigure wpa_supplicant
    - Restart wpa_supplicant interface instance

- name: Ensure symlink for wpa_supplicant interface instance
  become: yes
  file:
    path: "/etc/wpa_supplicant/wpa_supplicant-{{ wpa_supplicant_interface }}.conf"
    src: /etc/wpa_supplicant/wpa_supplicant.conf
    state: link
    owner: root
    group: root
  when:
    - wpa_supplicant_use_systemd_interface_instance
    - wpa_supplicant_interface in ansible_interfaces

- name: Ensure wpa_supplicant interface instance
  become: yes
  systemd:
    name: "wpa_supplicant@{{ wpa_supplicant_interface }}.service"
    enabled: yes
    state: started
  when:
    - wpa_supplicant_use_systemd_interface_instance
    - wpa_supplicant_interface in ansible_interfaces
